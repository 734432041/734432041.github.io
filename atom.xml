<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Code_dreamer</title>
  
  <subtitle>Magician</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://734432041.github.io/"/>
  <updated>2018-06-11T09:42:52.168Z</updated>
  <id>https://734432041.github.io/</id>
  
  <author>
    <name>LiLinfeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客迁移到另一台电脑</title>
    <link href="https://734432041.github.io/2018/06/11/hexo%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E5%88%B0%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91/"/>
    <id>https://734432041.github.io/2018/06/11/hexo博客迁移到另一台电脑/</id>
    <published>2018-06-11T09:28:22.000Z</published>
    <updated>2018-06-11T09:42:52.168Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="拷贝原来电脑上hexo目录的一下文件"><a href="#拷贝原来电脑上hexo目录的一下文件" class="headerlink" title="拷贝原来电脑上hexo目录的一下文件"></a>拷贝原来电脑上hexo目录的一下文件</h1><ul><li>config.yml</li><li>package.json</li><li>scaffolds/</li><li>source/</li><li>themes/<h1 id="在新电脑上安装node-js"><a href="#在新电脑上安装node-js" class="headerlink" title="在新电脑上安装node.js"></a>在新电脑上安装node.js</h1><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a> <h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><a href="https://gitforwindows.org/" target="_blank" rel="noopener">git</a><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><code>npm install -g hexo</code><h1 id="在hexo目录下执行以下命令"><a href="#在hexo目录下执行以下命令" class="headerlink" title="在hexo目录下执行以下命令"></a>在hexo目录下执行以下命令</h1></li></ul><p><code>npm install</code><br><code>npm install hexo-deployer-git –save</code><br><code>npm install hexo-generator-feed –save</code><br><code>npm install hexo-generator-sitemap –save</code></p><h1 id="填写git信息"><a href="#填写git信息" class="headerlink" title="填写git信息"></a>填写git信息</h1><p><code>git config --global user.email &quot;you@example.com&quot;</code><br><code>git config --global user.name &quot;Your Name&quot;</code><br><img src="/2018/06/11/hexo博客迁移到另一台电脑/Snipaste_2018-06-10_23-45-26.png" alt=""></p><h1 id="填写你的GitHub账号"><a href="#填写你的GitHub账号" class="headerlink" title="填写你的GitHub账号"></a>填写你的GitHub账号</h1><p><img src="/2018/06/11/hexo博客迁移到另一台电脑/Snipaste_2018-06-10_23-46-21.png" alt=""></p><h1 id="部署到远端"><a href="#部署到远端" class="headerlink" title="部署到远端"></a>部署到远端</h1><p><code>hexo g</code><br><code>hexo s</code></p><h1 id="成功"><a href="#成功" class="headerlink" title="成功"></a>成功</h1><p><img src="/2018/06/11/hexo博客迁移到另一台电脑/a269e2a43bb35529872a3d52f8a11805899217be40780-cvfXDk_fw658.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;拷贝原来电脑上hexo目录的一下文件&quot;&gt;&lt;a href=&quot;#拷贝原来电脑上hexo目录的一下文件&quot; class=&quot;headerlink&quot; title=&quot;拷贝原来电脑上hexo目录的一下文件&quot;&gt;&lt;/a&gt;拷贝原来电脑上hexo目录的
      
    
    </summary>
    
      <category term="搭建博客" scheme="https://734432041.github.io/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://734432041.github.io/tags/hexo/"/>
    
      <category term="博客" scheme="https://734432041.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>python3配置selenium和chromedriver</title>
    <link href="https://734432041.github.io/2018/06/05/python3%E9%85%8D%E7%BD%AEselenium%E5%92%8Cchromedriver/"/>
    <id>https://734432041.github.io/2018/06/05/python3配置selenium和chromedriver/</id>
    <published>2018-06-05T14:24:41.000Z</published>
    <updated>2018-06-08T15:20:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python3配置selenium和chromedriver"><a href="#python3配置selenium和chromedriver" class="headerlink" title="python3配置selenium和chromedriver"></a>python3配置selenium和chromedriver</h1><h2 id="第一步："><a href="#第一步：" class="headerlink" title="第一步："></a>第一步：</h2><p>安装selenium<br><img src="/2018/06/05/python3配置selenium和chromedriver/安装.png" alt="安装"><br>用<code>pip list</code>查看是否安装成功</p><h2 id="第二步："><a href="#第二步：" class="headerlink" title="第二步："></a>第二步：</h2><p>下载<code>chromedriver</code><strong>（注意chromedriver要和chrome版本对应）</strong>  具体的对应可以百度<br><a id="more"></a></p><h2 id="第三步："><a href="#第三步：" class="headerlink" title="第三步："></a>第三步：</h2><p>打开<code>chrome</code>安装地址，可以找到chrome快捷方式，找到目标地址<br><img src="/2018/06/05/python3配置selenium和chromedriver/目标地址.png" alt="目标地址"><br>并把<code>chromedriver.exe</code>移动进去<br><img src="/2018/06/05/python3配置selenium和chromedriver/chromedriver移入.png" alt="移动"></p><h2 id="第四步："><a href="#第四步：" class="headerlink" title="第四步："></a>第四步：</h2><p><strong>添加环境变量</strong><br>此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;添加chrome的安装地址<br><img src="/2018/06/05/python3配置selenium和chromedriver/添加环境变量.png" alt="添加环境变量"></p><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步:"></a>第五步:</h2><p>创建<code>seleniumTest.py</code>文件<br>输入以下代码并执行<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line">driver=webdriver.Chrome(executable_path=<span class="string">r'你的chrome安装地址\chromedriver.exe'</span>)</span><br><span class="line">driver.get(<span class="string">"http://baidu.com"</span>)</span><br><span class="line">print(driver.title)</span><br></pre></td></tr></table></figure></p><p>弹出百度页面</p><h3 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h3><p>我的程序是<br><img src="/2018/06/05/python3配置selenium和chromedriver/程序.png" alt="程序"></p><p><img src="/2018/06/05/python3配置selenium和chromedriver/24a9e6f844aa3617cf9986e0f9ef02abb4bfc30a23031-8e1QMN_fw658.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python3配置selenium和chromedriver&quot;&gt;&lt;a href=&quot;#python3配置selenium和chromedriver&quot; class=&quot;headerlink&quot; title=&quot;python3配置selenium和chromedriver&quot;&gt;&lt;/a&gt;python3配置selenium和chromedriver&lt;/h1&gt;&lt;h2 id=&quot;第一步：&quot;&gt;&lt;a href=&quot;#第一步：&quot; class=&quot;headerlink&quot; title=&quot;第一步：&quot;&gt;&lt;/a&gt;第一步：&lt;/h2&gt;&lt;p&gt;安装selenium&lt;br&gt;&lt;img src=&quot;/2018/06/05/python3配置selenium和chromedriver/安装.png&quot; alt=&quot;安装&quot;&gt;&lt;br&gt;用&lt;code&gt;pip list&lt;/code&gt;查看是否安装成功&lt;/p&gt;
&lt;h2 id=&quot;第二步：&quot;&gt;&lt;a href=&quot;#第二步：&quot; class=&quot;headerlink&quot; title=&quot;第二步：&quot;&gt;&lt;/a&gt;第二步：&lt;/h2&gt;&lt;p&gt;下载&lt;code&gt;chromedriver&lt;/code&gt;&lt;strong&gt;（注意chromedriver要和chrome版本对应）&lt;/strong&gt;  具体的对应可以百度&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://734432041.github.io/tags/python/"/>
    
      <category term="爬虫" scheme="https://734432041.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="selenium" scheme="https://734432041.github.io/tags/selenium/"/>
    
      <category term="chromedriver" scheme="https://734432041.github.io/tags/chromedriver/"/>
    
  </entry>
  
  <entry>
    <title>『小白日记』itchat库学习笔记（一）</title>
    <link href="https://734432041.github.io/2018/06/04/%E3%80%8E%E5%B0%8F%E7%99%BD%E6%97%A5%E8%AE%B0%E3%80%8Fitchat%E5%BA%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://734432041.github.io/2018/06/04/『小白日记』itchat库学习笔记（一）/</id>
    <published>2018-06-04T15:21:19.000Z</published>
    <updated>2018-06-08T15:18:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-itchar库的学习笔记（一）"><a href="#Python-itchar库的学习笔记（一）" class="headerlink" title="Python itchar库的学习笔记（一）"></a>Python itchar库的学习笔记（一）</h1><p><a href="http://itchat.readthedocs.io/zh/latest/" target="_blank" rel="noopener">itchat文档</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Pip install itchat  </p><p><img src="/2018/06/04/『小白日记』itchat库学习笔记（一）/安装.png" alt="安装"></p><a id="more"></a><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="登录微信"><a href="#登录微信" class="headerlink" title="登录微信"></a>登录微信</h3><p><code>Itchat.auto_login()</code>，使用这种方式不会保持登录状态，也就是说，下次还需要重新扫描二维码，可以加上hotReload=True 参数使得保持登录状态，该参数产生一个静态文件<code>itchat.pkl</code> 存储登录状态。  </p><p><img src="/2018/06/04/『小白日记』itchat库学习笔记（一）/login.png" alt="安装"></p><h3 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h3><p><img src="/2018/06/04/『小白日记』itchat库学习笔记（一）/登陆成功.png" alt="安装"></p><h3 id="登出"><a href="#登出" class="headerlink" title="登出"></a>登出</h3><p><img src="/2018/06/04/『小白日记』itchat库学习笔记（一）/登出.png" alt="安装"></p><h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><p><code>Send(msg=”Text Message”,toUserName)</code>  </p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li>Msg：要发送的信息</li><li>发送文件：msg=‘@fil@path_to_file’</li><li>发生图片：msg=’@img@path_to_img’</li><li>发送视频：msg=’@vid@path_to_vid’</li><li>toUserName：发送对象，默认为自己</li><li>返回值： True|False</li></ul><h3 id="注册消息方法"><a href="#注册消息方法" class="headerlink" title="注册消息方法"></a>注册消息方法</h3><p>如果itchat接收到没有注册的消息，消息就会被自动舍弃，但是我们可以自己动态注册消息。  </p><h3 id="自动回复好友实例"><a href="#自动回复好友实例" class="headerlink" title="自动回复好友实例"></a>自动回复好友实例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> itchat.content <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">@itchat.msg_register(TEXT,isGroupChat = False)      #表示接受消息时自动执行此函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    msg_content = msg[<span class="string">'Text'</span>]</span><br><span class="line">    itchat.send(<span class="string">"已收到了消息：&#123;&#125;"</span>.format(msg_content),toUserName=msg[<span class="string">'FromUserName'</span>])</span><br><span class="line">    localtime = datetime.datetime.now()</span><br><span class="line">    now_time_str = localtime.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"接收时间为：&#123;&#125;，请耐心等待我的回复"</span>.format(now_time_str)</span><br><span class="line"></span><br><span class="line">itchat.auto_login(hotReload=<span class="keyword">True</span>)</span><br><span class="line">itchat.run()</span><br></pre></td></tr></table></figure><p><img src="/2018/06/04/『小白日记』itchat库学习笔记（一）/7e56992740978acf4c23e71353df38e1e8ea9327277f8-g62vLO_fw658.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-itchar库的学习笔记（一）&quot;&gt;&lt;a href=&quot;#Python-itchar库的学习笔记（一）&quot; class=&quot;headerlink&quot; title=&quot;Python itchar库的学习笔记（一）&quot;&gt;&lt;/a&gt;Python itchar库的学习笔记（一）&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://itchat.readthedocs.io/zh/latest/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;itchat文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;Pip install itchat  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2018/06/04/『小白日记』itchat库学习笔记（一）/安装.png&quot; alt=&quot;安装&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://734432041.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Python" scheme="https://734432041.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>基础练习 完美的代价</title>
    <link href="https://734432041.github.io/2018/06/03/%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0-%E5%AE%8C%E7%BE%8E%E7%9A%84%E4%BB%A3%E4%BB%B7/"/>
    <id>https://734432041.github.io/2018/06/03/基础练习-完美的代价/</id>
    <published>2018-06-03T13:56:48.000Z</published>
    <updated>2018-06-03T14:39:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础练习-完美的代价"><a href="#基础练习-完美的代价" class="headerlink" title="基础练习 完美的代价"></a>基础练习 完美的代价</h1><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。<br>交换的定义是：交换两个相邻的字符<br>例如mamad<br>第一次交换 ad : mamda<br>第二次交换 md : madma<br>第三次交换 ma : madam (回文！完美！)</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>　　第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)<br>第二行是一个字符串，长度为N.只包含小写字母</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>　　如果可能，输出最少的交换次数。<br>    否则输出Impossible<br><a id="more"></a></p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>5<br>mamad</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>3</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先分析不可能的情况  </p><ol><li>当字符串长度为奇数，且有至少两个字符为奇数个数</li><li>当字符串长度为偶数，且有至少一个字符为奇数个数</li></ol><p>在可能的情况下的交换方法<br>定义i从左向右遍历，j从右向左遍历，如果str[i]==str[j]说明i和j位置对应，将j移动到字符串的末尾，下次遍历从这次的j的前一个位置开始遍历就好。<br>若n为奇数，且遍历到字符个数为奇数的个数时，只计算这个字符到字符串中间，不用在字符串中交换，这是因为有两个偶数个数的字符在字符串中间的一边是会交换两次。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, ans = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; str;</span><br><span class="line"><span class="keyword">int</span> end = n - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;end; i++)&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = end; j &gt;= i; j--)&#123;</span><br><span class="line"><span class="keyword">if</span> (i == j)&#123;<span class="comment">//从后向前没有找到和str[i]一样的字符 </span></span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)&#123;<span class="comment">//如果字符个数为偶数，不能出现不配对字符     </span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;<span class="comment">//如果字符个数为奇数，且已经出现了奇数个数的字符 </span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"Impossible"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">flag = <span class="number">1</span>; </span><br><span class="line">ans += <span class="built_in">abs</span>((n / <span class="number">2</span>) - i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (str[i] == str[j])&#123;<span class="comment">//如果找到配对字符串，把靠后的字符换到末尾，也就是和i对称的位置 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> tmp = j; tmp&lt;end; tmp++)&#123;</span><br><span class="line">swap(str[tmp], str[tmp + <span class="number">1</span>]);</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line">end--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/06/03/基础练习-完美的代价/QQ图片20180603223544.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础练习-完美的代价&quot;&gt;&lt;a href=&quot;#基础练习-完美的代价&quot; class=&quot;headerlink&quot; title=&quot;基础练习 完美的代价&quot;&gt;&lt;/a&gt;基础练习 完美的代价&lt;/h1&gt;&lt;p&gt;时间限制：1.0s   内存限制：512.0MB&lt;/p&gt;
&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;　　回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。&lt;br&gt;交换的定义是：交换两个相邻的字符&lt;br&gt;例如mamad&lt;br&gt;第一次交换 ad : mamda&lt;br&gt;第二次交换 md : madma&lt;br&gt;第三次交换 ma : madam (回文！完美！)&lt;/p&gt;
&lt;h2 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h2&gt;&lt;p&gt;　　第一行是一个整数N，表示接下来的字符串的长度(N &amp;lt;= 8000)&lt;br&gt;第二行是一个字符串，长度为N.只包含小写字母&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;　　如果可能，输出最少的交换次数。&lt;br&gt;    否则输出Impossible&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="蓝桥杯" scheme="https://734432041.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="蓝桥" scheme="https://734432041.github.io/tags/%E8%93%9D%E6%A1%A5/"/>
    
      <category term="题解" scheme="https://734432041.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="C/C++" scheme="https://734432041.github.io/tags/C-C/"/>
    
      <category term="算法训练" scheme="https://734432041.github.io/tags/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title>2018蓝桥国赛b组题解</title>
    <link href="https://734432041.github.io/2018/06/01/2018%E8%93%9D%E6%A1%A5%E5%9B%BD%E8%B5%9Bb%E7%BB%84%E9%A2%98%E8%A7%A3/"/>
    <id>https://734432041.github.io/2018/06/01/2018蓝桥国赛b组题解/</id>
    <published>2018-06-01T15:43:00.000Z</published>
    <updated>2018-06-08T15:19:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h1><h2 id="标题：换零钞"><a href="#标题：换零钞" class="headerlink" title="标题：换零钞"></a>标题：换零钞</h2><p>x星球的钞票的面额只有：100元，5元，2元，1元，共4种。<br>小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。<br>小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，<br>剩下的当然都是5元面额的。</p><p>银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？<br>（5元，2元，1元面额的必须都有，不能是0）</p><p>注意，需要提交的是一个整数，不要填写任何多余的内容。</p><a id="more"></a><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h3><p>由于2元数量是1元数量的10倍，所以1元和2元数量只能是21的倍数。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">10000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">40</span>;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">21</span>*i+k*<span class="number">5</span>==<span class="number">200</span>)&#123;</span><br><span class="line">ans = min(ans,i*<span class="number">11</span>+k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h1><h2 id="标题：激光样式"><a href="#标题：激光样式" class="headerlink" title="标题：激光样式"></a>标题：激光样式</h2><p>x星球的盛大节日为增加气氛，用30台机光器一字排开，向太空中打出光柱。<br>安装调试的时候才发现，不知什么原因，相邻的两台激光器不能同时打开！<br>国王很想知道，在目前这种bug存在的情况下，一共能打出多少种激光效果？<br>显然，如果只有3台机器，一共可以成5种样式，即：<br>全都关上（sorry, 此时无声胜有声，这也算一种）<br>开一台，共3种<br>开两台，只1种</p><p>30台就不好算了，国王只好请你帮忙了。</p><p>要求提交一个整数，表示30台激光器能形成的样式种数。</p><h3 id="思路：-1"><a href="#思路：-1" class="headerlink" title="思路："></a>思路：</h3><p>定义一个数组a[35]表示有i台机器时的样式种数。<br>一台机器有两种，<strong>开</strong>或者<strong>关</strong><br>两台机器有三种，<strong>全关</strong>、<strong>开第一台</strong>或者<strong>开第二台</strong>。<br>三台机器的时候，对第三台机器有开和不开两种。</p><ul><li>当它打开时，第二台一定是关闭的，此时有a[1]种。</li><li>当它关闭时，第一、第二台可能打开也可能关闭，此时有a[2]种<br>得到a[3]=a[1]+a[2]<br>以此类推<br>a[4]=a[3]+a[2];<br>a[5]=a[4]+a[3];<br>。。。。。。</li></ul><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ll a[<span class="number">35</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line">a[<span class="number">2</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">a[i]=a[i<span class="number">-1</span>]+a[i<span class="number">-2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a[<span class="number">30</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h1><h2 id="标题：格雷码"><a href="#标题：格雷码" class="headerlink" title="标题：格雷码"></a>标题：格雷码</h2><p>格雷码是以n位的二进制来表示数。<br>与普通的二进制表示不同的是，它要求相邻两个数字只能有1个数位不同。<br>首尾两个数字也要求只有1位之差。</p><p>有很多算法来生成格雷码。以下是较常见的一种：<br>从编码全0开始生成。<br>当产生第奇数个数时，只把当前数字最末位改变（0变1，1变0）<br>当产生第偶数个数时，先找到最右边的一个1，把它左边的数字改变。<br>用这个规则产生的4位格雷码序列如下：<br>0000<br>0001<br>0011<br>0010<br>0110<br>0111<br>0101<br>0100<br>1100<br>1101<br>1111<br>1110<br>1010<br>1011<br>1001<br>1000</p><p>以下是实现代码，仔细分析其中逻辑，并填写划线部分缺少的代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> msk = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) msk = msk &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>((a &amp; msk)? <span class="string">"1"</span> : <span class="string">"0"</span>);</span><br><span class="line">msk = msk &gt;&gt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++) num = num&lt;&lt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;num; i++)&#123;</span><br><span class="line">show(a,n);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">a = a ^ <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">a = _________________________ ; <span class="comment">//填空</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f(<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="答案：a-a-amp-a-lt-lt-1"><a href="#答案：a-a-amp-a-lt-lt-1" class="headerlink" title="答案：a ^ (((a&amp;(-a))&lt;&lt;1))"></a>答案：a ^ (((a&amp;(-a))&lt;&lt;1))</h3><h3 id="思路：-2"><a href="#思路：-2" class="headerlink" title="思路："></a>思路：</h3><p>树状数组的<code>lowbit</code>，根据题意，先找到最右边的一个1，把它左边的数字改变，<code>lowbit(x)</code>表示二进制表达式中最低位的一所对应的值，只需要把这个值左移一位，就得到题中的要求了。</p><h1 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h1><h2 id="标题：调手表"><a href="#标题：调手表" class="headerlink" title="标题：调手表"></a>标题：调手表</h2><p>小明买了块高端大气上档次的电子手表，他正准备调时间呢。<br>在 M78 星云，时间的计量单位和地球上不同，M78 星云的一个小时有 n 分钟。<br>大家都知道，手表只有一个按钮可以把当前的数加一。在调分钟的时候，如果当前显示的数是 0 ，那么按一下按钮就会变成 1，再按一次变成 2 。如果当前的数是 n - 1，按一次后会变成 0 。<br>作为强迫症患者，小明一定要把手表的时间调对。如果手表上的时间比当前时间多1，则要按 n - 1 次加一按钮才能调回正确时间。<br>小明想，如果手表可以再添加一个按钮，表示把当前的数加 k 该多好啊……<br>他想知道，如果有了这个 +k 按钮，按照最优策略按键，从任意一个分钟数调到另外任意一个分钟数最多要按多少次。<br>注意，按 +k 按钮时，如果加k后数字超过n-1,则会对n取模。<br>比如，n=10, k=6 的时候，假设当前时间是0，连按2次 +k 按钮，则调为2。</p><ul><li>「输入格式」<br>一行两个整数 n, k ，意义如题。</li></ul><ul><li>「输出格式」<br>一行一个整数<br>表示：按照最优策略按键，从一个时间调到另一个时间最多要按多少次。</li></ul><ul><li>「样例输入」<br>5 3</li></ul><ul><li>「样例输出」<br>2</li></ul><ul><li>「样例解释」<br>如果时间正确则按0次。否则要按的次数和操作系列之间的关系如下：<br>1：+1<br>2：+1, +1<br>3：+3<br>4：+3, +1</li></ul><ul><li>「数据范围」<br>对于 30% 的数据 0 &lt; k &lt; n &lt;= 5<br>对于 60% 的数据 0 &lt; k &lt; n &lt;= 100<br>对于 100% 的数据 0 &lt; k &lt; n &lt;= 100000</li></ul><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p><h3 id="思路：-3"><a href="#思路：-3" class="headerlink" title="思路："></a>思路：</h3><p>因为任意两个点要移动的次数只和他们之间的距离有关系，所以只用计算从0到各个点需要移动的次数就可以了。基本思路就是广搜，从0次开始，判断每次可以移动到的位置，到所有位置都搜索完成。</p><ol><li><p>数组实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==t)&#123;</span><br><span class="line">a[(i+<span class="number">1</span>)%n]=t+<span class="number">1</span>;</span><br><span class="line">a[(i+k)%n]=t+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="number">-1</span>)&#123;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>队列实现</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> nmax = <span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">int</span> step;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="keyword">int</span> vis[nmax]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> time[nmax]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="built_in">memset</span>(time,<span class="number">0</span>,<span class="keyword">sizeof</span>(time));</span><br><span class="line">node now,nxt;</span><br><span class="line">now.time = <span class="number">0</span>;</span><br><span class="line">now.step = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line">q.push(now);</span><br><span class="line">vis[now.time] = <span class="number">1</span>;</span><br><span class="line">time[now.time]= now.step;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">now = q.front();</span><br><span class="line">q.pop();</span><br><span class="line">nxt.time = (now.time+<span class="number">1</span>)%n;</span><br><span class="line"><span class="keyword">if</span>(vis[nxt.time]!=<span class="number">1</span>)&#123;</span><br><span class="line">vis[nxt.time] =<span class="number">1</span>;</span><br><span class="line">nxt.step = now.step+<span class="number">1</span>;</span><br><span class="line">time[nxt.time]=nxt.step;</span><br><span class="line">q.push(nxt);</span><br><span class="line">&#125;</span><br><span class="line">nxt.time = (now.time+k)%n;</span><br><span class="line"><span class="keyword">if</span>(vis[nxt.time]!=<span class="number">1</span>)&#123;</span><br><span class="line">vis[nxt.time]=<span class="number">1</span>;</span><br><span class="line">nxt.step = now.step+<span class="number">1</span>;</span><br><span class="line">time[nxt.time]=nxt.step;</span><br><span class="line">q.push(nxt);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k)&#123;</span><br><span class="line">bfs();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">ans = max(ans,time[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h1 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h1><h2 id="标题：搭积木"><a href="#标题：搭积木" class="headerlink" title="标题：搭积木"></a>标题：搭积木</h2><p>小明对搭积木非常感兴趣。他的积木都是同样大小的正立方体。<br>在搭积木时，小明选取 m 块积木作为地基，将他们在桌子上一字排开，中间不留空隙，并称其为第0层。<br>随后，小明可以在上面摆放第1层，第2层，……，最多摆放至第n层。摆放积木必须遵循三条规则：</p><p>规则1：每块积木必须紧挨着放置在某一块积木的正上方，与其下一层的积木对齐；<br>规则2：同一层中的积木必须连续摆放，中间不能留有空隙；<br>规则3：小明不喜欢的位置不能放置积木。</p><p>其中，小明不喜欢的位置都被标在了图纸上。图纸共有n行，从下至上的每一行分别对应积木的第1层至第n层。每一行都有m个字符，字符可能是‘.’或‘X’，其中‘X’表示这个位置是小明不喜欢的。<br>现在，小明想要知道，共有多少种放置积木的方案。他找到了参加蓝桥杯的你来帮他计算这个答案。<br>由于这个答案可能很大，你只需要回答这个答案对1000000007(十亿零七)取模后的结果。<br>注意：地基上什么都不放，也算作是方案之一种。</p><ul><li>【输入格式】<br>输入数据的第一行有两个正整数n和m，表示图纸的大小。<br>随后n行，每行有m个字符，用来描述图纸 。每个字符只可能是‘.’或‘X’。</li></ul><ul><li>【输出格式】<br>输出一个整数，表示答案对1000000007取模后的结果。</li></ul><ul><li>【样例输入1】<br>2 3<br>..X<br>.X.</li></ul><ul><li>【样例输出1】<br>4</li></ul><ul><li>【样例说明1】<br>成功的摆放有（其中O表示放置积木）：<br>(1)<br>..X<br>.X.<br>(2)<br>..X<br>OX.<br>(3)<br>O.X<br>OX.<br>(4)<br>..X<br>.XO</li></ul><ul><li>【样例输入2】<br>3 3<br>..X<br>.X.<br>…</li></ul><ul><li>【样例输出2】<br>16</li></ul><ul><li>【数据规模约定】<br>对于10%的数据，n=1，m&lt;=30；<br>对于40%的数据，n&lt;=10，m&lt;=30；<br>对于100%的数据，n&lt;=100，m&lt;=100。</li></ul><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 1000ms</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//待补充....</span></span><br></pre></td></tr></table></figure><h1 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h1><h2 id="标题：矩阵求和"><a href="#标题：矩阵求和" class="headerlink" title="标题：矩阵求和"></a>标题：矩阵求和</h2><p>经过重重笔试面试的考验，小明成功进入 Macrohard 公司工作。<br>今天小明的任务是填满这么一张表：<br>表有 n 行 n 列，行和列的编号都从1算起。<br>其中第 i 行第 j 个元素的值是 gcd(i, j)的平方，<br>gcd 表示最大公约数，以下是这个表的前四行的前四列：<br>1  1  1  1<br>1  4  1  4<br>1  1  9  1<br>1  4  1 16</p><p>小明突然冒出一个奇怪的想法，他想知道这张表中所有元素的和。<br>由于表过于庞大，他希望借助计算机的力量。</p><ul><li>「输入格式」<br>一行一个正整数 n 意义见题。</li></ul><ul><li>「输出格式」<br>一行一个数，表示所有元素的和。由于答案比较大，请输出模 (10^9 + 7)(即：十亿零七) 后的结果。</li></ul><ul><li>「样例输入」<br>4</li></ul><ul><li>「样例输出」<br>48</li></ul><ul><li>「数据范围」<br>对于 30% 的数据，n &lt;= 1000<br>存在 10% 的数据，n = 10^5<br>对于 60% 的数据，n &lt;= 10^6<br>对于 100% 的数据，n &lt;= 10^7</li></ul><p>资源约定：<br>峰值内存消耗（含虚拟机） &lt; 256M<br>CPU消耗  &lt; 2000ms<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//待补充.....</span></span><br></pre></td></tr></table></figure></p><p><img src="/2018/06/01/2018蓝桥国赛b组题解/seimei.jpg" alt="不要让我看见你"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一题&quot;&gt;&lt;a href=&quot;#第一题&quot; class=&quot;headerlink&quot; title=&quot;第一题&quot;&gt;&lt;/a&gt;第一题&lt;/h1&gt;&lt;h2 id=&quot;标题：换零钞&quot;&gt;&lt;a href=&quot;#标题：换零钞&quot; class=&quot;headerlink&quot; title=&quot;标题：换零钞&quot;&gt;&lt;/a&gt;标题：换零钞&lt;/h2&gt;&lt;p&gt;x星球的钞票的面额只有：100元，5元，2元，1元，共4种。&lt;br&gt;小明去x星旅游，他手里只有2张100元的x星币，太不方便，恰好路过x星银行就去换零钱。&lt;br&gt;小明有点强迫症，他坚持要求200元换出的零钞中2元的张数刚好是1元的张数的10倍，&lt;br&gt;剩下的当然都是5元面额的。&lt;/p&gt;
&lt;p&gt;银行的工作人员有点为难，你能帮助算出：在满足小明要求的前提下，最少要换给他多少张钞票吗？&lt;br&gt;（5元，2元，1元面额的必须都有，不能是0）&lt;/p&gt;
&lt;p&gt;注意，需要提交的是一个整数，不要填写任何多余的内容。&lt;/p&gt;
    
    </summary>
    
      <category term="蓝桥杯" scheme="https://734432041.github.io/categories/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
      <category term="蓝桥" scheme="https://734432041.github.io/tags/%E8%93%9D%E6%A1%A5/"/>
    
      <category term="题解" scheme="https://734432041.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="C/C++" scheme="https://734432041.github.io/tags/C-C/"/>
    
      <category term="算法训练" scheme="https://734432041.github.io/tags/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
</feed>
